(()=>{"use strict";const t=function(t){var e=this;this.elem=t,this.attachHandler=function(t){e.elem.onclick=t},this.disable=function(){e.elem.setAttribute("disabled","")},this.enable=function(){e.elem.removeAttribute("disabled")}};var e=function(){return e=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t},e.apply(this,arguments)},n=function(t){var n=t.delay,r=void 0===n?0:n,o=t.duration,i=void 0===o?0:o,s=r+Date.now();return e(e({},t),{start:s,end:s+i,started:!1,ended:!1})},r=function(t){return t<.5?4*Math.pow(t,3):(t-1)*(2*t-2)*(2*t-2)+1};const o=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Promise((function(e){var o=t.map(n),i=function(){var t=Date.now(),n=o.filter((function(e){var n=e.ended,r=e.start;return!n&&r<=t}));if(n.length)return n.forEach((function(e){var n=e.started,o=e.onStart,i=e.onProgress,s=e.start,u=e.end,a=e.onEnd;n||(e.started=!0,null==o||o());var c=(t-s)/(u-s);null==i||i((function(t,e){return t+(e-t)*r(c<1?c:1)})),t>=u&&(e.ended=!0,null==a||a())})),void requestAnimationFrame(i);e()};requestAnimationFrame(i)}))};var i,s=function(){function t(){var t=this;this.items=[],this.pop=function(){return t.items.pop()}}return t.prototype.push=function(t){this.items.push(t)},Object.defineProperty(t.prototype,"size",{get:function(){return this.items.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"peek",{get:function(){return this.items[this.size-1]},enumerable:!1,configurable:!0}),t}(),u=(i=function(t,e){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},i(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),a=function(t){function e(e){var n=t.call(this)||this;return n.elem=e,n.push=function(e){return n.elem.append(e.elem),t.prototype.push.call(n,e),n},n.getRect=function(){return n.elem.getBoundingClientRect()},n}return u(e,t),e}(s);const c=a,l=function(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return(e=t.classList).add.apply(e,n),t};const f=function(t,e){var n=(void 0===e?{}:e).classes,r=document.createElement(t);return n&&l.apply(void 0,function(t,e,n){if(n||2===arguments.length)for(var r,o=0,i=e.length;o<i;o++)!r&&o in e||(r||(r=Array.prototype.slice.call(e,0,o)),r[o]=e[o]);return t.concat(r||Array.prototype.slice.call(e))}([r],n,!1)),r};var h=function(){function t(t,e,n){var r=this;void 0===n&&(n=0),this.rank=t,this.suit=e,this.elem=function(t,e){var n=f("div",{classes:["card"]}),r=f("div",{classes:["inner"]});return r.append(f("div",{classes:["back"]})),r.append(f("div",{classes:["face","".concat(t,"_of_").concat(e)]})),n.append(r),n}(this.rank,this.suit),this.show=function(){return t=r,e=void 0,i=function(){var t=this;return function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}(this,(function(e){switch(e.label){case 0:return[4,o({duration:400,onProgress:function(e){t.setRotateY(e(0,180))}})];case 1:return e.sent(),[2]}}))},new((n=void 0)||(n=Promise))((function(r,o){function s(t){try{a(i.next(t))}catch(t){o(t)}}function u(t){try{a(i.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((i=i.apply(t,e||[])).next())}));var t,e,n,i},this.hide=function(){return o({duration:200,onProgress:function(t){r.setRotateY(t(180,0))}}),r},this.setPoint=function(t,e){return void 0===e&&(e=t),r.styles.transform="translate(".concat(t,"px, ").concat(e,"px)"),r},this.getPoint=function(){return t=r.elem,n=(e=new WebKitCSSMatrix(getComputedStyle(t).transform)).m41,o=e.m42,{x:Number(n)||0,y:Number(o)||0};var t,e,n,o},this.getRect=function(){return r.elem.getBoundingClientRect()},this.setForeground=function(t){return r.styles.zIndex=t.toString(),r},this.setOpacity=function(t){return r.styles.opacity=t.toString(),r},this.setRotateY=function(t){r.elem.firstChild.style.transform="rotateY(".concat(t,"deg)")},this.setPoint(-n/4).setForeground(n)}return Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),t}();const p=h;var d=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),y=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{a(r.next(t))}catch(t){i(t)}}function u(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},b=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},v=function(t){function e(e,n,r){var i=t.call(this,e)||this;return i.intro=function(){return y(i,void 0,void 0,(function(){return b(this,(function(t){switch(t.label){case 0:return[4,o.apply(void 0,this.items.map((function(t,e){var n=t.getPoint(),r=n.x,o=n.y,i=-e/4;return{delay:8*e,duration:600,onProgress:function(e){t.setPoint(e(r,i),e(o,i)).setOpacity(e(0,1))}}})))];case 1:return t.sent(),[2]}}))}))},i.shuffle=function(){return y(i,void 0,void 0,(function(){var t,e,n,r;return b(this,(function(i){switch(i.label){case 0:for(t=this.size-1;t;t-=1)e=Math.floor(Math.random()*(t+1)),r=[this.items[e],this.items[t]],this.items[t]=r[0],this.items[e]=r[1];return n=this.peek.getRect().width,[4,o.apply(void 0,this.items.reduce((function(t,e,r){var o=2*r,i=e.getPoint(),s=i.x,u=i.y,a=-r/4,c=(2*Math.round(Math.random())-1)*(Math.random()*n/2+n/2);return t.push({delay:o,duration:200,onProgress:function(t){e.setPoint(t(s,c),t(u,a))}},{duration:200,delay:o+200,onStart:function(){e.setForeground(r)},onProgress:function(t){e.setPoint(t(c,a),a)}}),t}),[]))];case 1:return i.sent(),[2]}}))}))},n.forEach((function(t){r.forEach((function(e){var n=-i.size/4;i.push(new p(e,t,i.size).setPoint(n,-150+n).setOpacity(0))}))})),i}return d(e,t),e.prototype.setForeground=function(t){this.elem.style.zIndex=t.toString()},e.prototype.getOffsetTop=function(){var t=this.getRect(),e=t.x,n=t.y,r=this.peek.getPoint();return{x:e+r.x,y:n+r.y}},e}(c);const w=v;var g=new Map([["ace",function(t,e){return t<11&&e<2?11:1}],["two",function(){return 2}],["three",function(){return 3}],["four",function(){return 4}],["five",function(){return 5}],["six",function(){return 6}],["seven",function(){return 7}],["eight",function(){return 8}],["nine",function(){return 9}],["ten",function(){return 10}],["jack",function(){return 10}],["queen",function(){return 10}],["king",function(){return 10}]]),m=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),k=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{a(r.next(t))}catch(t){i(t)}}function u(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},x=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},P=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.dragCard=function(t){return k(e,void 0,void 0,(function(){var e,n,r,i,s=this;return x(this,(function(u){switch(u.label){case 0:return e=this.peek.getPoint(),n=e.x,r=e.y,i=(this.size-3)*this.peek.getRect().width,[4,o({duration:400,onStart:function(){t&&s.peek.show()},onProgress:function(t){s.peek.setPoint(t(n,i),t(r,0))},onEnd:function(){s.peek.setForeground(s.size)}})];case 1:return u.sent(),[2]}}))}))},e.empty=function(){e.items=[]},e.getScore=function(){return e.items.reduce((function(t,e,n){return t+g.get(e.rank)(t,n)}),0)},e.blackjacked=function(){return 2===e.size&&21===e.getScore()},e.busted=function(){return e.getScore()>21},e}return m(e,t),e}(c);const O=P;const S=function(){function t(t){var e=this;this.elem=t,this.show=function(t){o({duration:100,onStart:function(){e.elem.textContent=t},onProgress:function(t){e.setOpacity(t(0,1))},onEnd:function(){e.setOpacity("")}})},this.hide=function(){"0"!==e.styles.opacity&&o({duration:200,onProgress:function(t){e.setOpacity(t(1,0))},onEnd:function(){e.setOpacity(0)}})},this.setOpacity=function(t){e.styles.opacity=t.toString()}}return Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),t}();var _=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{a(r.next(t))}catch(t){i(t)}}function u(t){try{a(r.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},j=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},E=function(t){return document.getElementById(t)};new function(t,e,n,r,o){var i=this;this.buttons=t,this.popup=e,this.deck=n,this.dealer=r,this.player=o,this.deal=function(){return _(i,void 0,void 0,(function(){return j(this,(function(t){switch(t.label){case 0:return this.popup.hide(),this.deck.setForeground(""),this.buttons.disableAll(),[4,this.dealCard(this.player)];case 1:return t.sent(),[4,this.dealCard(this.player)];case 2:return t.sent(),[4,this.dealCard(this.dealer)];case 3:return t.sent(),[4,this.dealCard(this.dealer,!1)];case 4:return t.sent(),this.player.blackjacked()||this.dealer.blackjacked()?[4,this.dealer.peek.show()]:[3,6];case 5:return t.sent(),this.popup.show("Blackjack!"),[3,7];case 6:this.buttons.hit.enable(),this.buttons.stand.enable(),t.label=7;case 7:return this.buttons.reset.enable(),[2]}}))}))},this.reset=function(){return _(i,void 0,void 0,(function(){var t=this;return j(this,(function(e){switch(e.label){case 0:return this.popup.hide(),this.buttons.disableAll(),this.deck.setForeground(1),[this.player,this.dealer].forEach((function(e){e.items.forEach((function(n,r){var o=n.getRect(),i=o.x,s=o.y,u=t.deck.getRect(),a=u.x,c=u.y;t.deck.push(n.setForeground(t.deck.size+e.size+r).setPoint(i-a,s-c).hide())})),e.empty()})),[4,this.deck.shuffle()];case 1:return e.sent(),[4,this.deck.shuffle()];case 2:return e.sent(),this.buttons.deal.enable(),[2]}}))}))},this.hit=function(){return _(i,void 0,void 0,(function(){return j(this,(function(t){switch(t.label){case 0:return this.buttons.disableAll(),[4,this.dealCard(this.player)];case 1:return t.sent(),this.player.busted()?(this.popup.show("Defeat!"),this.buttons.reset.enable(),[2]):(this.buttons.enableAllExceptDeal(),[2])}}))}))},this.stand=function(){return _(i,void 0,void 0,(function(){var t,e;return j(this,(function(n){switch(n.label){case 0:return this.buttons.disableAll(),[4,this.dealer.peek.show()];case 1:n.sent(),n.label=2;case 2:return this.dealer.getScore()<17?[4,this.dealCard(this.dealer)]:[3,4];case 3:return n.sent(),[3,2];case 4:return t=this.dealer.getScore(),e=this.player.getScore(),this.dealer.busted()||t<e?this.popup.show("Victory!"):e<t?this.popup.show("Defeat!"):this.popup.show("Push!"),this.buttons.reset.enable(),[2]}}))}))},this.dealCard=function(t,e){return void 0===e&&(e=!0),_(i,void 0,void 0,(function(){var n,r,o,i,s,u;return j(this,(function(a){switch(a.label){case 0:return n=this.deck.getOffsetTop(),r=n.x,o=n.y,i=t.getRect(),s=i.x,u=i.y,[4,t.push(this.deck.pop().setPoint(r-s,o-u)).dragCard(e)];case 1:return a.sent(),[2]}}))}))},this.buttons.deal.attachHandler(this.deal),this.buttons.reset.attachHandler(this.reset),this.buttons.hit.attachHandler(this.hit),this.buttons.stand.attachHandler(this.stand),_(i,void 0,void 0,(function(){return j(this,(function(t){switch(t.label){case 0:return[4,this.deck.intro()];case 1:case 2:return t.sent(),[4,this.deck.shuffle()];case 3:return t.sent(),this.buttons.deal.enable(),[2]}}))}))}(new function(t,e,n,r){var o=this;this.deal=t,this.reset=e,this.hit=n,this.stand=r,this.disableAll=function(){o.deal.disable(),o.reset.disable(),o.hit.disable(),o.stand.disable()},this.enableAllExceptDeal=function(){o.reset.enable(),o.hit.enable(),o.stand.enable()}}(new t(E("deal-btn")),new t(E("reset-btn")),new t(E("hit-btn")),new t(E("stand-btn"))),new S(E("popup")),new w(E("deck"),["clubs","spades","hearts","diamonds"],["ace","two","three","four","five","six","seven","eight","nine","ten","jack","queen","king"]),new O(E("dealer")),new O(E("player")))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,