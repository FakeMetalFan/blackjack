(()=>{"use strict";var t=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},e=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};const n=function(){function n(n,r,o,i,s){var a=this;this.buttons=n,this.popup=r,this.deck=o,this.dealer=i,this.players=s,this.buttons.deal.attachHandler((function(){a.deal()})),this.buttons.reset.attachHandler((function(){a.reset()})),this.buttons.hit.attachHandler((function(){a.hit()})),this.buttons.stand.attachHandler((function(){a.stand()})),t(a,void 0,void 0,(function(){return e(this,(function(t){switch(t.label){case 0:return[4,this.deck.intro()];case 1:case 2:return t.sent(),[4,this.deck.shuffle()];case 3:return t.sent(),this.buttons.deal.enable(),[2]}}))}))}return n.prototype.deal=function(){return t(this,void 0,void 0,(function(){var t,n,r;return e(this,(function(e){switch(e.label){case 0:this.popup.hide(),this.deck.foreground="",this.buttons.disableAll(),t=0,n=this.players.hands,e.label=1;case 1:return t<n.length?(r=n[t],[4,this.dealCard(r)]):[3,5];case 2:return e.sent(),[4,this.dealCard(r)];case 3:e.sent(),e.label=4;case 4:return t++,[3,1];case 5:return[4,this.dealCard(this.dealer)];case 6:return e.sent(),[4,this.dealCard(this.dealer,!1)];case 7:return e.sent(),this.players.haveBlackjack()||this.dealer.hasBlackjack()?[4,this.dealer.topCard.show()]:[3,9];case 8:return e.sent(),this.popup.show("Blackjack!"),[3,10];case 9:this.players.current.setActive(),this.buttons.hit.enable(),this.buttons.stand.enable(),e.label=10;case 10:return this.buttons.reset.enable(),[2]}}))}))},n.prototype.reset=function(){return t(this,void 0,void 0,(function(){var t=this;return e(this,(function(e){switch(e.label){case 0:return this.popup.hide(),this.players.setInactive(),this.buttons.disableAll(),this.deck.foreground="1",this.players.hands.flatMap((function(t){return t.cards})).concat(this.dealer.cards).forEach((function(e,n){var r=e.getRect(),o=r.x,i=r.y,s=t.deck.getRect(),a=s.x,u=s.y;e.foreground=t.deck.count+n,t.deck.push(e.hide().setTransform(o-a,i-u).toggleClass("dealt"))})),this.dealer.empty(),this.players.empty(),[4,this.deck.shuffle()];case 1:return e.sent(),[4,this.deck.shuffle()];case 2:return e.sent(),this.players.reset(),this.buttons.deal.enable(),[2]}}))}))},n.prototype.hit=function(){return t(this,void 0,void 0,(function(){return e(this,(function(t){switch(t.label){case 0:return this.buttons.disableAll(),[4,this.dealCard(this.players.current)];case 1:return t.sent(),this.players.current.hasBust()&&this.players.setNext(),this.players.current?(this.players.current.setActive(),this.buttons.enableAllExceptDeal()):this.stand(),[2]}}))}))},n.prototype.stand=function(){return t(this,void 0,void 0,(function(){var t,n;return e(this,(function(e){switch(e.label){case 0:return this.buttons.disableAll(),this.players.setNext(),this.players.current?(this.players.current.setActive(),this.buttons.enableAllExceptDeal(),[3,6]):[3,1];case 1:return[4,this.dealer.topCard.show()];case 2:e.sent(),e.label=3;case 3:return this.dealer.canDrawCard()?[4,this.dealCard(this.dealer)]:[3,5];case 4:return e.sent(),[3,3];case 5:t=this.dealer.getScore(),n=this.players.getTopScore(),this.players.haveBust()?this.popup.show("Defeat!"):this.dealer.hasBust()||t<n?this.popup.show("Victory!"):t===n?this.popup.show("Push!"):this.popup.show("Defeat!"),this.buttons.reset.enable(),e.label=6;case 6:return[2]}}))}))},n.prototype.dealCard=function(n,r){return void 0===r&&(r=!0),t(this,void 0,void 0,(function(){var t,o,i,s,a,u;return e(this,(function(e){switch(e.label){case 0:return t=this.deck.getOffsetTop(),o=t.x,i=t.y,s=n.getRect(),a=s.x,u=s.y,[4,n.push(this.deck.pop().setTransform(o-a,i-u)).dragCard(r)];case 1:return e.sent(),[2]}}))}))},n}(),r=function(){function t(t){this.elem=t}return t.prototype.attachHandler=function(t){this.elem.onclick=t},t.prototype.disable=function(){this.elem.setAttribute("disabled","")},t.prototype.enable=function(){this.elem.removeAttribute("disabled")},t}(),o=function(){function t(t,e,n,r){this.deal=t,this.reset=e,this.hit=n,this.stand=r}return t.prototype.disableAll=function(){this.deal.disable(),this.reset.disable(),this.hit.disable(),this.stand.disable()},t.prototype.enableAllExceptDeal=function(){this.reset.enable(),this.hit.enable(),this.stand.enable()},t}();var i=function(){return(i=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},s=function(t){var e=t.delay,n=void 0===e?0:e,r=t.duration,o=void 0===r?0:r,s=n+Date.now();return i(i({},t),{start:s,end:s+o,hasStarted:!1,hasEnded:!1})},a=function(t){return t<.5?4*Math.pow(t,3):(t-1)*(2*t-2)*(2*t-2)+1};const u=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Promise((function(e){var n=t.map(s),r=function(){var t=Date.now(),o=n.filter((function(e){var n=e.hasEnded,r=e.start;return!n&&r<=t}));o.length?(o.forEach((function(e){var n=e.start,r=e.end,o=e.onStart,i=e.onProgress,s=e.onEnd;e.hasStarted||(e.hasStarted=!0,null==o||o());var u=(t-n)/(r-n);null==i||i((function(t,e){return t+(e-t)*a(u<1?u:1)})),t>=r&&(e.hasEnded=!0,null==s||s())})),requestAnimationFrame(r)):e()};requestAnimationFrame(r)}))};var c=(new Map).set("ace",(function(t,e){return t<11&&e<2?11:1})).set("two",(function(){return 2})).set("three",(function(){return 3})).set("four",(function(){return 4})).set("five",(function(){return 5})).set("six",(function(){return 6})).set("seven",(function(){return 7})).set("eight",(function(){return 8})).set("nine",(function(){return 9})).set("ten",(function(){return 10})).set("jack",(function(){return 10})).set("queen",(function(){return 10})).set("king",(function(){return 10}));const l=function(){function t(t){this.elem=t,this.cards=[]}return t.prototype.push=function(t){return this.cards.push(t),this.elem.append(t.elem),this},t.prototype.pop=function(){return this.cards.pop()},t.prototype.getRect=function(){return this.elem.getBoundingClientRect()},Object.defineProperty(t.prototype,"count",{get:function(){return this.cards.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"topCard",{get:function(){return this.cards[this.count-1]},enumerable:!1,configurable:!0}),t}();var f,h=(f=function(t,e){return(f=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}f(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});const p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return h(e,t),e.prototype.dragCard=function(t){return e=this,n=void 0,o=function(){var e,n,r,o,i=this;return function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(s){switch(s.label){case 0:return e=this.topCard.getTransform(),n=e.x,r=e.y,o=10*(1-this.count),[4,u({duration:400,onStart:function(){t&&i.topCard.show()},onProgress:function(t){i.topCard.setTransform(t(n,o),t(r,o))},onEnd:function(){i.topCard.toggleClass("dealt").foreground=i.count}})];case 1:return s.sent(),[2]}}))},new((r=void 0)||(r=Promise))((function(t,i){function s(t){try{u(o.next(t))}catch(t){i(t)}}function a(t){try{u(o.throw(t))}catch(t){i(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(t){t(n)}))).then(s,a)}u((o=o.apply(e,n||[])).next())}));var e,n,r,o},e.prototype.setActive=function(){this.classList.add("active")},e.prototype.setInactive=function(){this.classList.remove("active")},e.prototype.empty=function(){return this.cards=[],this},e.prototype.getScore=function(){return this.cards.reduce((function(t,e,n){return t+c.get(e.rank)(t,n)}),0)},e.prototype.hasBlackjack=function(){return 21===this.getScore()&&2===this.count},e.prototype.hasBust=function(){return this.getScore()>21},Object.defineProperty(e.prototype,"classList",{get:function(){return this.elem.classList},enumerable:!1,configurable:!0}),e}(l);var d=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const y=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return d(e,t),e.prototype.canDrawCard=function(){return this.getScore()<17},e}(p);var b=function(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=document.createElement("div");return(t=r.classList).add.apply(t,e),r};const v=function(){function t(t,e,n){void 0===n&&(n=0),this.elem=b("card"),this.rank=t;var r=b("inner");r.append(b("back")),r.append(b("face",t+"-of-"+e)),this.elem.append(r);var o=-n/4;this.setTransform(o,o).foreground=n}return t.prototype.show=function(){return t=this,e=void 0,r=function(){var t=this;return function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(e){switch(e.label){case 0:return[4,u({duration:400,onProgress:function(e){t.rotationY=e(0,180)}})];case 1:return e.sent(),[2,this]}}))},new((n=void 0)||(n=Promise))((function(o,i){function s(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}));var t,e,n,r},t.prototype.hide=function(){var t=this;return u({duration:200,onProgress:function(e){t.rotationY=e(180,0)}}),this},t.prototype.setTransform=function(t,e){return this.styles.transform="translate("+t+"px, "+e+"px)",this},t.prototype.getTransform=function(){var t=getComputedStyle(this.elem).transform.replace(/[^\d\-.,]/g,"").split(","),e=t[4],n=t[5];return{x:Number(e)||0,y:Number(n)||0}},t.prototype.getRect=function(){return this.elem.getBoundingClientRect()},t.prototype.toggleClass=function(t){return this.elem.classList.toggle(t),this},Object.defineProperty(t.prototype,"foreground",{set:function(t){this.styles.zIndex=t.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{set:function(t){this.styles.opacity=t.toString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rotationY",{set:function(t){this.elem.firstChild.style.transform="rotateY("+t+"deg)"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),t}();var g=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),w=function(t,e,n,r){return new(n||(n=Promise))((function(o,i){function s(t){try{u(r.next(t))}catch(t){i(t)}}function a(t){try{u(r.throw(t))}catch(t){i(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},m=function(t,e){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((o=(o=s.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};const x=function(t){function e(e,n,r){var o=t.call(this,e)||this;return n.forEach((function(t){r.forEach((function(e){var n=-o.count/4,r=new v(e,t,o.count).setTransform(n,-200+n);r.opacity=0,o.push(r)}))})),o}return g(e,t),e.prototype.intro=function(){return w(this,void 0,void 0,(function(){return m(this,(function(t){switch(t.label){case 0:return[4,u.apply(void 0,this.cards.map((function(t,e){var n=t.getTransform(),r=n.x,o=n.y,i=-e/4;return{delay:8*e,duration:600,onProgress:function(e){t.setTransform(e(r,i),e(o,i)).opacity=e(0,1)}}})))];case 1:return t.sent(),[2]}}))}))},e.prototype.shuffle=function(){return w(this,void 0,void 0,(function(){var t,e,n,r;return m(this,(function(o){switch(o.label){case 0:for(t=this.count-1;t;t-=1)e=Math.floor(Math.random()*(t+1)),r=[this.cards[e],this.cards[t]],this.cards[t]=r[0],this.cards[e]=r[1];return n=this.topCard.getRect().width,[4,u.apply(void 0,this.cards.reduce((function(t,e,r){var o=2*r,i=e.getTransform(),s=i.x,a=i.y,u=-r/4,c=(2*Math.round(Math.random())-1)*(Math.random()*n/2+n/2);return t.push({delay:o,duration:200,onProgress:function(t){e.setTransform(t(s,c),t(a,u))}},{duration:200,delay:o+200,onStart:function(){e.foreground=r},onProgress:function(t){e.setTransform(t(c,u),u)}}),t}),[]))];case 1:return o.sent(),[2]}}))}))},e.prototype.getOffsetTop=function(){var t=this.getRect(),e=t.x,n=t.y,r=this.topCard.getTransform();return{x:e+r.x,y:n+r.y}},Object.defineProperty(e.prototype,"foreground",{set:function(t){this.elem.style.zIndex=t},enumerable:!1,configurable:!0}),e}(l),k=function(){function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.currentIndex=0,this.hands=t}return t.prototype.setNext=function(){this.setInactive(),this.currentIndex+=1},t.prototype.reset=function(){this.currentIndex=0},t.prototype.setInactive=function(){this.hands.forEach((function(t){t.setInactive()}))},t.prototype.empty=function(){this.hands.forEach((function(t){t.empty()}))},t.prototype.haveBlackjack=function(){return this.hands.some((function(t){return t.hasBlackjack()}))},t.prototype.haveBust=function(){return!this.hands.some((function(t){return!t.hasBust()}))},t.prototype.getTopScore=function(){return this.hands.reduce((function(t,e){if(e.hasBust())return t;var n=e.getScore();return n>t?n:t}),0)},Object.defineProperty(t.prototype,"current",{get:function(){return this.hands[this.currentIndex]},enumerable:!1,configurable:!0}),t}(),P=function(){function t(t){this.elem=t}return t.prototype.show=function(t){var e=this;u({duration:100,onStart:function(){e.elem.textContent=t},onProgress:function(t){e.opacity=t(0,1)},onEnd:function(){e.opacity=""}})},t.prototype.hide=function(){var t=this;"0"!==this.styles.opacity&&u({duration:200,onProgress:function(e){t.opacity=e(1,0)},onEnd:function(){t.opacity=0}})},Object.defineProperty(t.prototype,"styles",{get:function(){return this.elem.style},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{set:function(t){this.styles.opacity=t.toString()},enumerable:!1,configurable:!0}),t}();var C=function(t){return document.getElementById(t)};new n(new o(new r(C("deal-btn")),new r(C("reset-btn")),new r(C("hit-btn")),new r(C("stand-btn"))),new P(C("popup")),new x(C("deck"),["clubs","spades","hearts","diamonds"],["ace","two","three","four","five","six","seven","eight","nine","ten","jack","queen","king"]),new y(C("dealer")),new k(new p(C("player-2")),new p(C("player-3"))))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,